# yaml-language-server: $schema=https://gist.githubusercontent.com/qbikez/74abe161996cd6360c2876ea7fd15cfb/raw/67be972b3e8a4b3df3d75a1e1fca46c297dd92d0/bunnyshell.schema.json

version: v1
kind: Environment
name: dotnet
type: primary # primary | ephemeral
# deployment:
#   strategy:
#     type: RollingUpdate
#     maxUnavailable: 2 # optional, the default value is 25%
#     maxSurge: 50% # optional, the default value is 25%
environmentVariables:
  oc_password: "<<BNS_SECRET>>"
  oc_username: bunny
  tf_account_access_key: TF_OUT_AAAibAZHV1twAAABLw_account_access_key
  tf_account_name: TF_OUT_AAAibAZHV1twAAABLw_account_name
components:

  - kind: Service
    name: azurite
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /services/azurite
    dockerCompose:
      build:
        context: services/azurite
        dockerfile: Dockerfile
      ports:
        - "10000:10000"
        - "10001:10001"
        - "10002:10002"
      command:
        [
          "azurite",
          "-l",
          "/data",
          "--blobHost",
          "0.0.0.0",
          "--queueHost",
          "0.0.0.0",
          "--tableHost",
          "0.0.0.0",
          "-d",
          "/log/debug.log",
          "--disableProductStyleUrl",
        ]
      # environment:
      #   AZURITE_ACCOUNTS: "azurite-{{env.unique}}:Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
    hosts: # you can add more
      - hostname: "blob-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 10000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps
      - hostname: "tables-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 10002
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps

  - kind: Application
    version: v1
    name: oc-registry
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/oc-registry
    gitDockerComposePath: /apps/oc-registry/docker-compose.yaml
    dockerCompose:
      build:
        context: apps/oc-registry
        dockerfile: Dockerfile
      ports:
        - "3000:3000"
      environment:
        APPSETTING_BASEURL: "https://ocregistry-{{env.unique}}.bunnyenv.com"
        
        APPSETTING_REGISTRY_PASSWORD: "{{env.vars.oc_password}}"
        APPSETTING_REGISTRY_USERNAME: "{{env.vars.oc_username}}"
        
        # APPSETTING_CDN_ENDPOINT: "https://{{env.vars.tf_account_name}}.blob.core.windows.net/"
        # APPSETTING_STORAGE_ACCOUNT_KEY: "{{env.vars.tf_account_access_key}}"
        # APPSETTING_STORAGE_ACCOUNT_NAME: "{{env.vars.tf_account_name}}"
        APPSETTING_CDN_ENDPOINT: "https://blob-{{env.unique}}.bunnyenv.com/devstoreaccount1/"
        APPSETTING_BLOB_URL: "https://blob-{{env.unique}}.bunnyenv.com/devstoreaccount1/"
        APPSETTING_STORAGE_ACCOUNT_NAME: "devstoreaccount1"
        APPSETTING_STORAGE_ACCOUNT_KEY: "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
   # pod:
    #   init_containers:
    #     - from: components-publisher
    #       name: components-publisher
    hosts: # you can add more
      - hostname: "ocregistry-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: /registry/
        servicePort: 3000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps
      # expose it as the same host as front
      - hostname: "front-{{env.unique}}.bunnyenv.com"
        path: /registry/
        servicePort: 3000
        public: true
  - kind: Application
    name: components-publisher
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/open-components
    dockerCompose:
      build:
        context: apps/open-components
        dockerfile: Dockerfile
      environment:
        OC_USERNAME: "{{env.vars.oc_username}}"
        OC_PASSWORD: "{{env.vars.oc_password}}"
        OC_REGISTRY: "https://ocregistry-{{env.unique}}.bunnyenv.com"
  
  - kind: Application
    version: v1
    name: frontend
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/dotnet/frontend # optional; for monorepo apps
    gitDockerComposePath: /apps/dotnet/frontend/docker-compose.yaml # the path of the docker-compose.yaml inside the git_repo
    dockerCompose:
      build:
        context: apps/dotnet/frontend
        dockerfile: Dockerfile
      ports:
        - "9000:9000"
      environment:
        ASPNETCORE_ENVIRONMENT: Release
        ASPNETCORE_URLS: http://+:9000
    hosts: # you can add more
      - hostname: "front-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 9000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps

  - kind: Application
    version: v1
    name: my-api
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/dotnet/my-api # optional; for monorepo apps
    gitDockerComposePath: /apps/dotnet/my-api/docker-compose.yaml # the path of the docker-compose.yaml inside the git_repo
    dockerCompose:
      build:
        context: apps/dotnet/my-api
        dockerfile: Dockerfile
      ports:
        - "9000:9000"
      environment:
        ASPNETCORE_ENVIRONMENT: Development
        ASPNETCORE_URLS: http://+:9000
    hosts: # you can add more
      - hostname: "my-api-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 9000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps

    # resources:
    #   limits:
    #     memory: 750M
    #   requests:
    #     cpu: '0.15'
    #     memory: 500M

# security:
#   access:
#     allowedIps: # only IPs in these ranges will be able to access the non-public hosts
#       - '192.168.0.1/24'
#       - '192.12.45.123/32'

# volumes:
#   - name: db-data
#     size: 1Gi
#     type: disk
# dev:
#   nginx:
#     - containers:
#         nginx:
#           command: ['nginx']
#           syncPaths:
#             - remotePath: /var/www/
#               localPath: ~/project
#           portForwards:
#             - "8080<8080"
#           environment:
#             WHEN_IN_DEV: '{{ env.vars.OTHER_VAR }}'
#           resources:
#               limits:
#                   memory: 750M
#               requests:
#                   cpu: '0.15'
#                   memory: 500M
