# yaml-language-server: $schema=https://gist.githubusercontent.com/qbikez/74abe161996cd6360c2876ea7fd15cfb/raw/67be972b3e8a4b3df3d75a1e1fca46c297dd92d0/bunnyshell.schema.json

version: v1
kind: Environment
name: micro-frontends
type: primary # primary | ephemeral
deployment:
  strategy:
    type: Recreate # RollingUpdate
#     maxUnavailable: 2 # optional, the default value is 25%
#     maxSurge: 50% # optional, the default value is 25%
environmentVariables:
  ARM_CLIENT_ID: "<<BNS_SECRET>>"
  ARM_CLIENT_SECRET: "<<BNS_SECRET>>"
  ARM_SUBSCRIPTION_ID: "<<BNS_SECRET>>"
  ARM_TENANT_ID: "<<BNS_SECRET>>"
  oc_password: "<<BNS_SECRET>>"
  oc_username: bunny
components:
  - kind: Terraform
    name: infra
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: terraform/
    runnerImage: "hashicorp/terraform:1.5"
    deploy:
      - "cd terraform"
      - "/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf"
      - "terraform init -input=false -no-color"
      - 'terraform apply -var "instance_suffix={{env.unique}}" -input=false -auto-approve -no-color'
      - "BNS_TF_STATE_LIST=`terraform show -json`"
      - "SERVICEBUS_CONNECTIONSTRING=`terraform output -raw servicebus_connectionstring`"
    destroy:
      - "cd terraform"
      - "/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf"
      - "terraform init -input=false -no-color"
      - 'terraform destroy -var "instance_suffix={{env.unique}}" -input=false -auto-approve -no-color'
    exportVariables:
      - SERVICEBUS_CONNECTIONSTRING
    environment:
      ARM_CLIENT_ID: "{{env.vars.ARM_CLIENT_ID}}"
      ARM_CLIENT_SECRET: "{{env.vars.ARM_CLIENT_SECRET}}"
      ARM_TENANT_ID: "{{env.vars.ARM_TENANT_ID}}"
      ARM_SUBSCRIPTION_ID: "{{env.vars.ARM_SUBSCRIPTION_ID}}"
  - kind: Service
    name: azurite
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /services/azurite
    dockerCompose:
      build:
        context: services/azurite
        dockerfile: Dockerfile
      ports:
        - "10000:10000"
        - "10001:10001"
        - "10002:10002"
      command:
        [
          "azurite",
          "-l",
          "/data",
          "--blobHost",
          "0.0.0.0",
          "--queueHost",
          "0.0.0.0",
          "--tableHost",
          "0.0.0.0",
          "-d",
          "/log/debug.log",
          "--disableProductStyleUrl",
        ]
      # environment:
      #   AZURITE_ACCOUNTS: "azurite-{{env.unique}}:Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
    hosts: # you can add more
      - hostname: "blob-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 10000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps
      - hostname: "tables-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 10002
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps

  - kind: Application
    version: v1
    name: oc-registry
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/open-components
    gitDockerComposePath: /apps/open-components/docker-compose.yaml
    dockerCompose:
      build:
        context: apps/open-components
        dockerfile: Dockerfile
      ports:
        - "3000:3000"
      environment:
        APPSETTING_BASEURL: "https://ocregistry-{{env.unique}}.bunnyenv.com" # https://ocregistry-{{env.unique}}.bunnyenv.com/registry ?

        APPSETTING_REGISTRY_PASSWORD: "{{env.vars.oc_password}}"
        APPSETTING_REGISTRY_USERNAME: "{{env.vars.oc_username}}"

        # APPSETTING_CDN_ENDPOINT: "https://{{env.vars.tf_account_name}}.blob.core.windows.net/"
        APPSETTING_CDN_ENDPOINT: "https://blob-{{env.unique}}.bunnyenv.com/devstoreaccount1/"
        APPSETTING_BLOB_URL: "https://blob-{{env.unique}}.bunnyenv.com/devstoreaccount1/"
        APPSETTING_STORAGE_ACCOUNT_NAME: "devstoreaccount1"
        APPSETTING_STORAGE_ACCOUNT_KEY: "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
    hosts: # you can add more
      - hostname: "ocregistry-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: /registry/
        servicePort: 3000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps
      # expose it as the same host as front
      - hostname: "main-{{env.unique}}.bunnyenv.com"
        path: /registry/
        servicePort: 3000
        public: true
  - kind: Application
    version: v1
    name: frontend
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/frontend # optional; for monorepo apps
    gitDockerComposePath: /apps/frontend/docker-compose.yaml # the path of the docker-compose.yaml inside the git_repo
    dockerCompose:
      build:
        context: apps/frontend
        dockerfile: Dockerfile
      ports:
        - "9000:9000"
      environment:
        ASPNETCORE_ENVIRONMENT: Release
        ASPNETCORE_URLS: http://+:9000
    hosts: # you can add more
      - hostname: "main-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 9000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps

  - kind: Application
    version: v1
    name: orders
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/orders # optional; for monorepo apps
    gitDockerComposePath: /apps/orders/docker-compose.yaml # the path of the docker-compose.yaml inside the git_repo
    dockerCompose:
      build:
        context: apps/orders
        dockerfile: Dockerfile
      ports:
        - "5223:5223"
      environment:
        ASPNETCORE_ENVIRONMENT: Development
        ASPNETCORE_URLS: http://+:5223
        ConnectionStrings__ServiceBus: "{{components.infra.exported.SERVICEBUS_CONNECTIONSTRING}}"
    hosts: # you can add more
      - hostname: "orders-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: / # optional
        servicePort: 5223
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps
      - hostname: "main-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: /orders/
        servicePort: 5223
        public: true

  - kind: Application
    version: v1
    name: payments
    gitRepo: https://github.com/qbikez/bunnyshell-templates.git
    gitBranch: main
    gitApplicationPath: /apps/payments
    gitDockerComposePath: /apps/payments/docker-compose.yaml
    dockerCompose:
      build:
        context: apps/payments
        dockerfile: Dockerfile
      ports:
        - "5000:5000"
      environment:
        SERVICEBUS_CONNECTIONSTRING: "{{components.infra.exported.SERVICEBUS_CONNECTIONSTRING}}"
    hosts: # you can add more
      - hostname: "payments-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: /
        servicePort: 5000
        public: true # will be publicly available, even if the user IP does not exist in security.allowedIps\
      - hostname: "main-{{env.unique}}.bunnyenv.com" # has to be suffixed with -{{env.unique}}.bunnyenv.com
        path: /payments/
        servicePort: 5000
        public: true
# security:
#   access:
#     allowedIps: # only IPs in these ranges will be able to access the non-public hosts
#       - '192.168.0.1/24'
#       - '192.12.45.123/32'

# volumes:
#   - name: db-data
#     size: 1Gi
#     type: disk
# dev:
#   nginx:
#     - containers:
#         nginx:
#           command: ['nginx']
#           syncPaths:
#             - remotePath: /var/www/
#               localPath: ~/project
#           portForwards:
#             - "8080<8080"
#           environment:
#             WHEN_IN_DEV: '{{ env.vars.OTHER_VAR }}'
#           resources:
#               limits:
#                   memory: 750M
#               requests:
#                   cpu: '0.15'
#                   memory: 500M
