kind: Environment
name: 'Temp 2 env'
type: primary
environmentVariables:
    ARM_CLIENT_ID: need-to-replace
    ARM_CLIENT_SECRET: need-to-replace
    ARM_SUBSCRIPTION_ID: need-to-replace
    ARM_TENANT_ID: need-to-replace
    oc_password: need-to-replace
    oc_username: bunny
components:
    -
        kind: Terraform
        name: infra
        gitRepo: 'https://github.com/bns-hack/qbikez_bunnyshell-templates.git'
        gitBranch: main
        gitApplicationPath: terraform/
        runnerImage: 'hashicorp/terraform:1.5'
        deploy:
            - 'cd terraform'
            - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
            - 'terraform init -input=false -no-color'
            - 'terraform apply -var "instance_suffix={{env.unique}}" -input=false -auto-approve -no-color'
            - 'BNS_TF_STATE_LIST=`terraform show -json`'
            - 'SERVICEBUS_CONNECTIONSTRING=`terraform output -raw servicebus_connectionstring`'
            - 'ACCOUNT_ACCESS_KEY=`terraform output -raw account_access_key`'
            - 'ACCOUNT_NAME=`terraform output -raw account_name`'
        destroy:
            - 'cd terraform'
            - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
            - 'terraform init -input=false -no-color'
            - 'terraform destroy -var "instance_suffix={{env.unique}}" -input=false -auto-approve -no-color'
        exportVariables:
            - SERVICEBUS_CONNECTIONSTRING
            - ACCOUNT_ACCESS_KEY
            - ACCOUNT_NAME
        environment:
            ARM_CLIENT_ID: '{{env.vars.ARM_CLIENT_ID}}'
            ARM_CLIENT_SECRET: '{{env.vars.ARM_CLIENT_SECRET}}'
            ARM_SUBSCRIPTION_ID: '{{env.vars.ARM_SUBSCRIPTION_ID}}'
            ARM_TENANT_ID: '{{env.vars.ARM_TENANT_ID}}'
    -
        kind: Application
        name: oc-registry
        gitRepo: 'https://github.com/bns-hack/qbikez_bunnyshell-templates.git'
        gitBranch: main
        gitApplicationPath: /apps/open-components
        dockerCompose:
            build:
                context: apps/open-components
                dockerfile: Dockerfile
            ports:
                - '3000:3000'
            environment:
                APPSETTING_BASEURL: 'https://ocregistry-{{env.unique}}.bunnyenv.com'
                APPSETTING_BLOB_URL: 'https://{{components.infra.exported.ACCOUNT_NAME}}.blob.core.windows.net/'
                APPSETTING_CDN_ENDPOINT: 'https://{{components.infra.exported.ACCOUNT_NAME}}.blob.core.windows.net/'
                APPSETTING_REGISTRY_PASSWORD: '{{env.vars.oc_password}}'
                APPSETTING_REGISTRY_USERNAME: '{{env.vars.oc_username}}'
                APPSETTING_STORAGE_ACCOUNT_KEY: '{{components.infra.exported.ACCOUNT_ACCESS_KEY}}'
                APPSETTING_STORAGE_ACCOUNT_NAME: '{{components.infra.exported.ACCOUNT_NAME}}'
        hosts:
            -
                hostname: 'ocregistry-{{env.unique}}.bunnyenv.com'
                path: /registry/
                servicePort: 3000
                public: true
            -
                hostname: 'main-{{env.unique}}.bunnyenv.com'
                path: /registry/
                servicePort: 3000
                public: true
    -
        kind: Application
        name: frontend
        gitRepo: 'https://github.com/bns-hack/qbikez_bunnyshell-templates.git'
        gitBranch: main
        gitApplicationPath: /apps/frontend
        dockerCompose:
            build:
                context: apps/frontend
                dockerfile: Dockerfile
            ports:
                - '9000:9000'
            environment:
                ASPNETCORE_ENVIRONMENT: Release
                ASPNETCORE_URLS: 'http://+:9000'
        hosts:
            -
                hostname: 'main-{{env.unique}}.bunnyenv.com'
                path: /
                servicePort: 9000
                public: true
    -
        kind: Application
        name: orders
        gitRepo: 'https://github.com/bns-hack/qbikez_bunnyshell-templates.git'
        gitBranch: main
        gitApplicationPath: /apps/orders
        dockerCompose:
            build:
                context: apps/orders
                dockerfile: Dockerfile
            ports:
                - '5223:5223'
            environment:
                ASPNETCORE_ENVIRONMENT: Development
                ASPNETCORE_URLS: 'http://+:5223'
                ConnectionStrings__ServiceBus: '{{components.infra.exported.SERVICEBUS_CONNECTIONSTRING}}'
        hosts:
            -
                hostname: 'orders-{{env.unique}}.bunnyenv.com'
                path: /
                servicePort: 5223
                public: true
            -
                hostname: 'main-{{env.unique}}.bunnyenv.com'
                path: /orders/
                servicePort: 5223
                public: true
    -
        kind: Application
        name: payments
        gitRepo: 'https://github.com/bns-hack/qbikez_bunnyshell-templates.git'
        gitBranch: main
        gitApplicationPath: /apps/payments
        dockerCompose:
            build:
                context: apps/payments
                dockerfile: Dockerfile
            ports:
                - '5000:5000'
            environment:
                SERVICEBUS_CONNECTIONSTRING: '{{components.infra.exported.SERVICEBUS_CONNECTIONSTRING}}'
        hosts:
            -
                hostname: 'payments-{{env.unique}}.bunnyenv.com'
                path: /
                servicePort: 5000
                public: true
            -
                hostname: 'main-{{env.unique}}.bunnyenv.com'
                path: /pay/
                servicePort: 5000
                public: true
